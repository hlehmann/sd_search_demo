(function(a){if(typeof require==="function"&&typeof exports==="object"&&typeof module==="object"){module.exports=a}else{if(typeof define==="function"&&define.amd){define(function(){return a})}else{chai.use(a)}}}(function sinonChai(e,j){var i=Array.prototype.slice;function h(m){return typeof m==="function"&&typeof m.getCall==="function"&&typeof m.calledWithExactly==="function"}function f(m){return m&&h(m.proxy)}function a(m){if(!h(m._obj)&&!f(m._obj)){throw new TypeError(j.inspect(m._obj)+" is not a spy or a call to a spy!")}}function k(p,r,s,m,o){var q=m?"always have ":"have ";s=s||"";if(h(p.proxy)){p=p.proxy}function n(t){return p.printf.apply(p,t)}return{affirmative:n(["expected %n to "+q+r+s].concat(o)),negative:n(["expected %n to not "+q+r].concat(o))}}function l(m,n,o){j.addProperty(e.Assertion.prototype,m,function(){a(this);var p=k(this._obj,n,o,false);this.assert(this._obj[m],p.affirmative,p.negative)})}function d(n,m,o){return function(){a(this);var q="always"+n[0].toUpperCase()+n.substring(1);var s=j.flag(this,"always")&&typeof this._obj[q]==="function";var p=s?q:n;var r=k(this._obj,m,o,s,i.call(arguments));this.assert(this._obj[p].apply(this._obj,arguments),r.affirmative,r.negative)}}function b(m,o,p){var n=d(m,o,p);j.addProperty(e.Assertion.prototype,m,n)}function c(q,o,n,p){var m=d(o,n,p);j.addMethod(e.Assertion.prototype,q,m)}function g(m,n,o){c(m,m,n,o)}j.addProperty(e.Assertion.prototype,"always",function(){j.flag(this,"always",true)});l("called","been called"," at least once, but it was never called");l("calledOnce","been called exactly once",", but it was called %c%C");l("calledTwice","been called exactly twice",", but it was called %c%C");l("calledThrice","been called exactly thrice",", but it was called %c%C");b("calledWithNew","been called with new");g("calledBefore","been called before %1");g("calledAfter","been called after %1");g("calledOn","been called with %1 as this",", but it was called with %t instead");g("calledWith","been called with arguments %*","%C");g("calledWithExactly","been called with exact arguments %*","%C");g("calledWithMatch","been called with arguments matching %*","%C");g("returned","returned %1");c("thrown","threw","thrown %1")}));